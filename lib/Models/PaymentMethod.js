
/**
 * GeniusReferralsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
var BaseModel = require("./BaseModel");

/**
 * Creates an instance of PaymentMethod
 *
 * @constructor
 */
PaymentMethod = function (obj) {
    if(!obj) {
        this.username = null;     
        this.description = null;     
        this.isActive = null;     
        //Append to variable dictionary
        this._variableDict['isActive'] = 'is_active';
    } else {
        this.username = (obj.username !== undefined && obj.username !== null)? obj.username : null;
        this.description = (obj.description !== undefined && obj.description !== null)? obj.description : null;
        this.isActive = (obj.is_active !== undefined && obj.is_active !== null)? obj.is_active : null;
        //Append to variable dictionary
        this._variableDict['isActive'] = 'is_active';
    }
};

PaymentMethod.prototype = new BaseModel();
PaymentMethod.prototype.constructor = PaymentMethod;

/**
 * The username
 *
 * @return {string}
 */
PaymentMethod.prototype.getUsername = function() {
    return this.username;
};

/**
 * Setter for Username
 * 
 * @param {string} value 
 */
PaymentMethod.prototype.setUsername = function(value) {
    this.username = value;
};

/**
 * The description
 *
 * @return {string}
 */
PaymentMethod.prototype.getDescription = function() {
    return this.description;
};

/**
 * Setter for Description
 * 
 * @param {string} value 
 */
PaymentMethod.prototype.setDescription = function(value) {
    this.description = value;
};

/**
 * Is the payment method active? (true, false)
 *
 * @return {binary}
 */
PaymentMethod.prototype.getIsActive = function() {
    return this.isActive;
};

/**
 * Setter for IsActive
 * 
 * @param {binary} value 
 */
PaymentMethod.prototype.setIsActive = function(value) {
    this.isActive = value;
};


module.exports = PaymentMethod;
